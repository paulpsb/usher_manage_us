<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usher.dao.CorrectionShopProductDao">
	<select id="getCorrectionShopProductCount" parameterType="com.usher.dto.CorrectionShopProductDto" resultType="com.usher.dto.CorrectionShopProductDto">
		select count(*) as total_count
		from
			correction_shop_product a
		where
			1 = 1
		<if test="status != null and status !='' ">			
			and a.status = #{status}
		</if>			
		<if test="product_name != null and product_name !='' ">			
			and a.product_name like concat('%',#{product_name},'%')
		</if>	
				
	</select>
	
	<select id="getCorrectionShopProductList" parameterType="com.usher.dto.CorrectionShopProductDto" resultType="com.usher.dto.CorrectionShopProductDto">
		select
			a.id,
			to_char(a.created,'yyyy-mm-dd hh24:mi:ss') as created,
			to_char(a.modified,'yyyy-mm-dd hh24:mi:ss') as modified,
			a.status,
			a.section,
			a.practice_type,
			a.product_type,
			a.product_name,
			a.product_desc,
			a.product_basic_price,
			a.product_price,
			a.product_image,
			a.sorting,
			a.reading_yn,
			a.listening_yn,
			a.speaking_yn,
			a.writing_yn
		from
			correction_shop_product a
		where
			1 = 1
		<if test="status != null and status !='' ">			
			and a.status = #{status}
		</if>			
		<if test="product_name != null and product_name !='' ">			
			and a.product_name like concat('%',#{product_name},'%')
		</if>	
		order by a.sorting
		limit #{row_num} offset #{first_num}
	</select>
	<select id="getCorrectionShopProduct" parameterType="com.usher.dto.CorrectionShopProductDto" resultType="com.usher.dto.CorrectionShopProductDto">
		select
			a.id,
			to_char(a.created,'yyyy-mm-dd hh24:mi:ss') as created,
			to_char(a.modified,'yyyy-mm-dd hh24:mi:ss') as modified,
			a.status,
			a.section,
			a.practice_type,
			a.product_type,
			a.product_name,
			a.product_desc,
			a.product_basic_price,
			a.product_price,
			a.product_image,
			a.sorting,
			a.reading_yn,
			a.listening_yn,
			a.speaking_yn,
			a.writing_yn
		from
			correction_shop_product a
		where
			a.id = #{id}
	</select>	
	<insert id="insertCorrectionShopProduct" parameterType="com.usher.dto.CorrectionShopProductDto" useGeneratedKeys="true" keyProperty="id" >
		insert into correction_shop_product(
			created,
			modified,
			status,
			section,
			practice_type,
			product_type,
			product_name,
			product_desc,
			product_basic_price,
			product_price,
			product_image,
			sorting,
			reading_yn,
			listening_yn,
			speaking_yn,
			writing_yn
		)values(
			now(),
			now(),
			#{status},
			#{section},
			#{practice_type},
			#{product_type},
			#{product_name},
			#{product_desc},
			#{product_basic_price},
			#{product_price},
			#{product_image},
			#{sorting},
			#{reading_yn},
			#{listening_yn},
			#{speaking_yn},
			#{writing_yn}
		)
	</insert>
	<update id="updateCorrectionShopProduct" parameterType="com.usher.dto.CorrectionShopProductDto">
		update correction_shop_product set
			modified = now(),
			section = #{section},
			practice_type = #{practice_type},
			product_type = #{product_type},
			product_name = #{product_name},
			product_desc = #{product_desc},
			product_basic_price = #{product_basic_price},
			product_price = #{product_price},
			product_image = #{product_image},
			sorting = #{sorting},
			reading_yn = #{reading_yn},
			listening_yn = #{listening_yn},
			speaking_yn = #{speaking_yn},
			writing_yn = #{writing_yn}
		where
			id = #{id}		
	</update>
	<delete id="deleteCorrectionShopProduct" parameterType="com.usher.dto.CorrectionShopProductDto">
		delete from correction_shop_product
		where
			id = #{id}		
	</delete>
</mapper>