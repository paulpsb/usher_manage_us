<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.usher.dao.BatchExamGrammarDao">
	<select id="getBatchExamGrammarNumList" resultType="com.usher.dto.BatchExamGrammarDto" parameterType="com.usher.dto.BatchExamGrammarDto">
		select 
			type,
			num
		from
			batch_exam_grammar
		group by type, num
		order by 2
	</select>
	
	<select id="getBatchExamGrammarQuestionList" resultType="com.usher.dto.BatchExamGrammarDto" parameterType="com.usher.dto.BatchExamGrammarDto">
		select 
			question_num
		from 
			batch_exam_grammar 
		where 
			type = #{type}
			and num = #{num}
		order by 1
	</select>	
	
	<select id="getBatchExamGrammarNum" resultType="com.usher.dto.BatchExamGrammarDto" parameterType="com.usher.dto.BatchExamGrammarDto">
		select 
			coalesce(max(num) + 1,1) as num 
		from 
			batch_exam_grammar 
		where 
			type = #{type}
	</select>	
	
	<select id="getBatchExamGrammarQuestionNum" resultType="com.usher.dto.BatchExamGrammarDto" parameterType="com.usher.dto.BatchExamGrammarDto">
		select 
			coalesce(max(question_num) + 1,1) as question_num 
		from 
			batch_exam_grammar 
		where 
			type = #{type}
			and num = #{num}
	</select>	
	<select id="getBatchExamGrammarList" resultType="com.usher.dto.BatchExamGrammarDto" parameterType="com.usher.dto.BatchExamGrammarDto">
		select
			type,
			num,
			question_num,
			question,
			score,
			answer
		from
			batch_exam_grammar
		where
			type = #{type}
			and num = #{num}
		order by question_num
	</select>
	<select id="getBatchExamGrammar" resultType="com.usher.dto.BatchExamGrammarDto" parameterType="com.usher.dto.BatchExamGrammarDto">
		select
			a.id,
			to_char(a.created,'yyyy-mm-dd HH24:MI:SS') as created,
			a.created_id,
			concat(b.last_name, b.first_name) as created_name,
			to_char(a.modified,'yyyy-mm-dd HH24:MI:SS') as modified,
			a.modified_id,
			concat(c.last_name, c.first_name) as modified_name,
			a.type,
			a.num,
			a.question_num,
			a.question,
			a.choice_a,
			a.choice_b,
			a.choice_c,
			a.choice_d,
			a.choice_e,
			a.choice_f,
			a.choice_g,
			a.choice_h,
			a.choice_i,
			a.score,
			a.answer
		from
			batch_exam_grammar a
			join auth_user b on a.created_id = b.id
			join auth_user c on a.modified_id = c.id
		where
			type = #{type}
			and num = #{num}
			and question_num = #{question_num}
	</select>
	
	<insert id="insertBatchExamGrammar" parameterType="com.usher.dto.BatchExamGrammarDto">
		insert into batch_exam_grammar (
			created,
			created_id,
			modified,
			modified_id,
			type,
			num,
			question_num
		) values (
			now(),
			#{created_id},
			now(),
			#{modified_id},
			#{type},
			#{num},
			#{question_num}
		)
	</insert>	
	
	<update id="updateBatchExamGrammar" parameterType="com.usher.dto.BatchExamGrammarDto">
		update batch_exam_grammar  set
			modified = now(),
			modified_id = #{modified_id},
			question = #{question},
			choice_a = #{choice_a},
			choice_b = #{choice_b},
			choice_c = #{choice_c},
			choice_d = #{choice_d},
			choice_e = #{choice_e},
			choice_f = #{choice_f},
			choice_g = #{choice_g},
			choice_h = #{choice_h},
			choice_i = #{choice_i},
			score = #{score},
			answer = #{answer}
		where
			type = #{type}
			and num = #{num}
			and question_num = #{question_num}
	</update>			
</mapper>